# Replace with your own OTAA keys,
# obtainable through the "files" widget in Managed IoT Cloud.
# kit SN b4e62df4ade5

# TTN register:
#          app id  ???, dev id ???
#Network = 'TTN' # or 'WiFi'
# data rate on join
#DR_join  = 0 # 0 .. 5 dflt None=5 gives sf 12 .. 7
# data rate on socket
#DR_sock = 2 # 0 .. 5
# OTAA keys
dev_eui = "D491234567890123"
app_eui = "70ABCDEF12345678"
app_key = "71ABCDEF1234567890ACACADABRA6C7E"
# ABP keys
dev_addr  = "26012345"
nwk_swkey = "E8ABCDEF12348ACACADABRAF3AC9F48C"
app_swkey = "0328064348476ACACADABRAA08401402"

# wifi AP or Node after one hour dflt MySense-AAAA/www.pycom.io
W_SSID = 'MySense-AAAA'  # kit S/N dflt AAA taken from LoPy S/N
W_PASS = 'BehoudDeParel'

# force REPL development modus? Or use Hall and magnet for REPL mode
#REPL = False
#replPin = 'P13'  # if hall is present on this pin

#interval = { 'sample': 60,    # dust sample in secs
#             'interval': 15,     # sample interval in minutes
#             'gps':      3*60,  # location updates in minutes
#             'info':     24*60, # send kit info in minutes
#  }

# MySense conf start modes: dflt: create configuration in flash on cold start
#    and will auto detect devices on ttl and i2c bus
#    nvs RAM is permanent in PyCom mem: change it with import pycom, and
#    pycom.nvs_set('modus',1) will reset ttl/i2c configurion, and force auto detect
#    pycom.nvs_set('modus',2) the archived configuratioin will be used

# power mgt of ttl/uarts OFF/on, i2c OFF/on and sleep deepsleep OFF/on, display ON/off
# display: None (always on), False: always off, True on/off during sleep
# sleep pin enabled: ttl and i2c will be set to True
# wifi on True: after 1 Hr wifi is turned off
# 'sleep' True force deepsleep, dflt off
# led: True rgb led is disabled, only ON on failure
#Power = {
#    'ttl': False, 'i2c': False, 'sleep': False,
#    'display': None, 'led': False, 'wifi': True
# }
# less energy use next

# defines kit 'home' GPS (meta) location, define None if GPS is not used
# detected start GPS is archived in nvs ram
# dynamic (gps > 50m) location are sent as measurement data
#thisGPS = [0.0,0.0,0.0] # (LAT,LON,ALT) # GPS may overwrite this on startup

# calibration Taylor factors
# calibrate = None # or e.g. { 'temperature': [-6.2,1], 'pm1': [-20.0,0.5], ...}
# uncomment if calibration is known
#calibrate = {
#     "temperature": [0,1],
#     "humidity": [0,1],
#     "pressure": [0,1],
#     "gas": [0,1],
#     "gas_base": 0+1.0*178644.6, # use gas calibration
#     "pm1": [0,1],
#     "pm25": [0,1],
#     "pm10": [0,1],
#}

# auto detect I2C address if module is wired/connected
# Meteo supported: BME280, BME680, SHT31
# meteo sensor is auto detected and driver loaded
# useMeteo = 'I2C'# I2C bus, None: disabled
# next for BME680 VOC base, use m,eteo_test.py to get gBase
#M_gBase = 202403.4 # BME680 gas base line
# dflt None or missing: (re)calculate takes 5 minutes

# use oled display None: disabled
# useDisplay = True  # or 'I2C' enable display, dflt auto detect

# SDA wire is white, SCL wire is yellow
#I2Cdevices = [ # dflt sensor I2C address for identification
#         ('BME280',0x76),('BME280',0x77), # BME serie Bosch incl 680
#         ('SHT31',0x44),('SHT31',0x45),   # Sensirion serie
#         ('SSD1306',0x3c)                 # oled display
#    ]
# dflt: [('P23','P22',None)] # no power pin, one I2C connection
I2Cpins = [('P23','P22','P21')] # I2C pins [(SDA,SC,Pwr), ...]

# uart allocations number from 0 (0,1,2) PCB label (TTL3,TTL2,TTL1)
# device/module: (yellow Rx, white Tx, red Pwr optional deflt None)
# default UART pins used by auto detect device
#UARTpins=[('P1','P0',None),('P4','P3',None),('P11','P10',None)]
# omit to use P1/P0, used for console
UARTpins=[('P4','P3','P19'),('P11','P10','P9')]

#useGPS = 'UART'      # None or False if not present, dflt True
# Dflt GPS dev wiring: Rx = 'P11' yellow, Tx = 'P10' white

#useDust = 'UART'     # UART, use False if not present, dflt True
# dust module uart: Rx = 'P4' yellow, Tx 'P3' white
# PM count  and average PM size values are auto detected
#Dexplicit = True     # default, limited range, Sensirion count style
#            False      Plantower count style, PM count > size

# various pins sensors
#accuPin  = 'P17'      # ADC accu level watch dog > 5V
#accuLevel = 11.8      # battery too low level
#sleepPin = 'P18'      # enabled (0) deepsleep (dflt 15 minutes)
